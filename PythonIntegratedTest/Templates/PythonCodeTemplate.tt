<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
class <#=Class1#>(<#=SuperClass#>):   
   <#=StaticField1#> = 0    
   def __init__(self):
     self.<#=InstanceField1#> = 50
   @staticmethod
   def <#=StaticMethod#>(<#=Param1#>,<#=Param2#>):
     <#=Param1#>=110
     <#=Param2#>.subfield=80

   def <#=InstanceMethod1#>(<#=Param1#>,<#=Param2#>):
     <#=LocalVariable1#>="DeclaredLocalVariabe"
     <#=Param2#>.subfield="modifiedParameter"
     <#=Param1#>.<#=StaticField1#>="modifiedStaticField"
     <#=Param1#>.<#=InstanceField1#>="modifiedInstance"
     <#=LocalVariable1#>="modifiedLocalVariable"
     <#=Param1#>.<#=InstanceMethod2#>()
   
   def <#=InstanceMethod2#>(<#=Param1#>,<#=Param2#>):
     <#=LocalVariable1#>="DeclaredLocalVariabe"
     accesseToParameter=<#=Param2#>.subfield
     accessToClassStaticField=<#=Param1#>.<#=StaticField1#>
     acceessToClassInstanceField=<#=Param1#>.<#=InstanceField1#>
     acceessToLocalVariable=<#=LocalVariable1#>.subField
     acceessToUndifiendField=undeclaredField.subField
    


   def <#=InstanceMethod3#>(self):   
     <#=LocalVariable2#>=0
     while <#=WhileCond#>:
         <#=LocalVariable2#>= <#=LocalVariable2#>+5
     for i in range(0,100):
         print(i)
     if <#=IfCond1#>:
        return 10
     elif <#=IfCond2#>:
        return  <#=LocalVariable2#>


class <#=Class2#>():
    pass
